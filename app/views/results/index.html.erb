<h1>Results</h1>

<p>
  <b>Date Range:</b>
  <div id="date_range_slider" style="margin-top:60px;margin-bottom:60px;width:800px;"></div>
</p>

<p>
  <b>Aggregate:</b>
  <div id="aggregate_radio">
    <input type="radio" id="aggregate_avg" name="aggregate_option" value="avg" checked="checked" /><label for="aggregate_avg">Average</label>
    <input type="radio" id="aggregate_max" name="aggregate_option" value="max" /><label for="aggregate_max">Maximum</label>
    <input type="radio" id="aggregate_min" name="aggregate_option" value="min" /><label for="aggregate_min">Minimum</label>
  </div>
</p>

<p>
  <b>X-Axis Plotting Parameter:</b>
  <div id="x_parameter_radio">
    <input type="radio" id="x_parameter_index" name="x_parameter_option" value="id" /><label for="x_parameter_index">Index</label>
    <input type="radio" id="x_parameter_los_pos" name="x_parameter_option" value="mean_los_pos" checked="checked" /><label for="x_parameter_los_pos">LoS Positive</label>
    <input type="radio" id="x_parameter_capacity" name="x_parameter_option" value="capacity" /><label for="x_parameter_capacity">Capacity</label>
  </div>
</p>

<p>
  <b>Y-Axis Plotting Parameter:</b>
  <div id="y_parameter_radio">
    <input type="radio" id="y_parameter_index" name="y_parameter_option" value="id" /><label for="y_parameter_index">Index</label>
    <input type="radio" id="y_parameter_los_pos" name="y_parameter_option" value="mean_los_pos" checked="checked" /><label for="y_parameter_los_pos">LoS Positive</label>
    <input type="radio" id="y_parameter_capacity" name="y_parameter_option" value="capacity" /><label for="y_parameter_capacity">Capacity</label>
  </div>
</p>

<table id="source_info" style="float:left;width:500px;border:1px solid #e6e6e6">
<tr>
    <th style="text-align:center">&harr;/&uarr;</th>
    <th style="text-align:center">ID</th>
    <th style="text-align:right">Capacity</th>
    <th style="text-align:right">LoS Pos Mean</th>
    <th style="text-align:right">LoS Pos Std Dev</th>
</tr>
</thead>
<% @hospitals.each do |hospital| %>
<tr>
    <td style="text-align:center"></td>
    <td style="text-align:center"><%=h hospital.id %></td>
    <td style="text-align:right"><%=h hospital.capacity %></td>
    <td style="text-align:right"><%=h "%.4f"%hospital.mean_los_pos %></td>
    <td style="text-align:right"><%=h "%.4f"%hospital.stddev_los_pos %></td>
</tr>
<% end %>
</table>
<div id="placeholder" style="float:left;width:500px;height:600px;"></div>

<ul id="myMenu" class="contextMenu">
    <li class="details">
        <a href="#details">View Details</a>
    </li>
    <li class="delete remove_row separator">
        <a href="#remove_row">Remove Row</a>
    </li>
    <li class="delete remove_col">
        <a href="#remove_col">Remove Column</a>
    </li>
</ul>

<div style="display:none" id="loading" style="width:50%;margin:auto;padding-top:150px;"><img src="/images/loading.gif" /></div>

<script type="text/javascript">

var row_mapping = <%= raw @row_mapping.to_json %>;
var hospitals = <%= raw @hospitals.to_json %>;
var hospital_count = hospitals.length;
var x_hospitals = <%= raw Array.new(@hospitals.length).fill(true).to_json %>;
var x_hospital_count = hospitals.length;
var y_hospitals = <%= raw Array.new(@hospitals.length).fill(true).to_json %>;
var y_hospital_count = hospitals.length;
var flot_data;
var results;
var plot;
var current_item;
var colors = [
    "rgba(204,204,255,0.6)",
    "rgba(163,163,255,0.6)",
    "rgba(122,122,255,0.6)",
    "rgba(82,82,255,0.6)",
    "rgba(41,41,255,0.6)",
    "rgba(0,0,204,0.6)",
    "rgba(0,0,163,0.6)"
];
var colorstep = function(mrsa){return 0};

function result_from_index(index) {
    var row = Math.floor(index/x_hospital_count);
    var col = index%y_hospital_count;
    for (i=0; i<=row; i++) {
        if (!x_hospitals[i]) {
            row++;
        }
    }
    for (i=0; i<=col; i++) {
        if (!y_hospitals[i]) {
            col++;
        }
    }
    return results[row*hospital_count+col].result;
}

$(function() {
    var slider = $("#date_range_slider").slider({
            range: true,
            min: 1,
            max: 5000,
            values: [4500, 5000],
            slide: function(event, ui) {
                $(ui.handle).qtip('api').updatePosition(event,false);
                $(ui.handle).qtip('api').updateContent(ui.value,false);
            },
            change: function(event, ui) {
                $(ui.handle).qtip('api').updatePosition(event,false);
                reload();
            }
    });
    
    $(".ui-slider-handle:first").qtip({
        content: {text:'4500'},
        position: {corner: {target: 'topMiddle', tooltip: 'bottomMiddle'}},
        style: {tip: 'bottomMiddle'},
        show: { ready:true,delay: 0},
        hide: { when:false}
    });
    
    $(".ui-slider-handle:last").qtip({
        content: {text:'5000'},
        position: {corner: {target: 'bottomMiddle', tooltip: 'topMiddle'}},
        style: {tip: 'topMiddle'},
        show: { ready:true,delay: 0},
        hide: { when:false}
    });
    
    $('#aggregate_radio').buttonset().change(redraw);
    $('#x_parameter_radio').buttonset().change(redraw);
    $('#y_parameter_radio').buttonset().change(redraw);
    
    $(".ui-slider-handle:first").qtip('api').updatePosition(false,false);
    $(".ui-slider-handle:last").qtip('api').updatePosition(false,false);
    
    $("#placeholder").contextMenu({
        menu: 'myMenu'
    },
    function(action, el, pos) {
        var result = result_from_index(current_item.dataIndex);
        var source_id = result.source_id;
        var target_id = result.target_id;
        switch(action) {
        case 'details':
            window.location = '/' + <%= params[:experiment_id] %> + '/results/view/' + source_id + '-' + target_id;
        break;
        case 'remove_col':
            x_hospitals[source_id-1] = false;
            row_mapping["mean_los_pos"].splice(source_id, 1);
            row_mapping["capacity"].splice(source_id, 1);
            x_hospital_count--;
            redraw();
        break;
        case 'remove_row':
            y_hospitals[target_id-1] = false;
            row_mapping["mean_los_pos"].splice(target_id, 1);
            row_mapping["capacity"].splice(target_id, 1);
            y_hospital_count--;
            redraw();
        break;
    }
});

    $("#placeholder").bind("plothover", function (event, pos, item) {
        if (!item) return;
        if (!current_item || current_item.dataIndex != item.dataIndex) {
            current_item = item;
            var x_parameter = $('input[name=x_parameter_option]:checked').val();
            var y_parameter = $('input[name=y_parameter_option]:checked').val();
            
            plot.unhighlight();
            $('#source_info tr:odd').css('background-color','#d9d9d9');
            $('#source_info tr:even').css('background-color','#ffffff');
            $('#source_info tr:gt(0) td:nth-child(1)').html('');
            
            var row = Math.floor(item.dataIndex/y_hospital_count);
            var col = item.dataIndex%y_hospital_count;
            var start_row = y_hospital_count*row;
            for (var i=0; i<y_hospital_count; i++) {
                plot.highlight(item.series, i+start_row);
            }
            for (var i=0; i<x_hospital_count; i++) {
                plot.highlight(item.series, i*y_hospital_count+col);
            }
            
            var result = result_from_index(current_item.dataIndex);
            var source_id = (x_parameter != "id" ? row_mapping[x_parameter][result.source_id] : result.source_id);
            var target_id = (y_parameter != "id" ? row_mapping[y_parameter][result.target_id] : result.target_id);
            if (source_id != target_id) {
                $('#source_info tr:eq('+source_id+')').css('background-color','#d9d9f2');
                $('#source_info tr:eq('+source_id+') td:eq(0)').html('&harr;');
                $('#source_info tr:eq('+target_id+')').css('background-color','#d9f2d9');
                $('#source_info tr:eq('+target_id+') td:eq(0)').html('&uarr;');
            }
            else {
                $('#source_info tr:eq('+source_id+')').css('background-color','#d9f2f2');
                $('#source_info tr:eq('+source_id+') td:eq(0)').html('&harr;&uarr;');
            }
        }
    });
    
    reload();
});

var reload = function() {
    $("#placeholder").append($("#loading").show());
    
    var start = $("#date_range_slider").slider('values',0);
    var end = $("#date_range_slider").slider('values',1);
    
    var url = '/' + <%= params[:experiment_id] %> + '/results/aggregate/'
            + start + '-' + end + '.json';
    
    $.getJSON(url, function(data, textStatus, xhr) {
        results = data;
        redraw();
        $("#placeholder").after($("#loading").hide());
    });
}

var redraw = function() {
    var aggregate = $('input[name=aggregate_option]:checked').val();
    var x_parameter = $('input[name=x_parameter_option]:checked').val();
    var y_parameter = $('input[name=y_parameter_option]:checked').val();
    
    sort_hospitals();
    
    var options = {
        colors: [colors[3]],
        lines: {
            show: false,
            lineWidth: 0
        },
        points: {
            show: true,
            colorCallback: function(series) {
                return function(point) {
                    // Given the base series color and a point.
                    // Output the modified color to display.
                    var result = result_from_index(point);
                    return colors[colorstep(result[aggregate])];
                }
            },
            shadowSize: 0,
            lineWidth: 0,
            radius: 2
        },
        grid: {
            tickColor: "rgba(0,0,0,0)",
            borderWidth: 0,
            mouseActiveRadius: 150,
            hoverable: true,
            clickable: true
        },
        xaxis: {
            tickDecimals: 0
        },
        yaxis: {
            tickDecimals: 0
        },
        legend: {
            show: false
        }
    };
    
    flot_data = [{label:aggregate,data:[]}];
    $.each(results,function(index,value) {
        if (x_hospitals[value.result.source_id-1] && y_hospitals[value.result.target_id-1]) {
            flot_data[0].data.push([
                hospitals[value.result.source_id-1].hospital[x_parameter],
                hospitals[value.result.target_id-1].hospital[y_parameter]
            ]);
        }
    });
    
    var steps = [];
    for (var i=1; i<=7; i++) {
        steps[i-1] = results[Math.floor(i*results.length/7)-1].result[aggregate];
    }

    colorstep = function(mrsa) {
        for(var i=0; i<7; i++) {
            if (mrsa<steps[i]) return i;
        }
        return 6;
    };
    
    plot = $.plot($("#placeholder"), flot_data, options);
    
};

var sort_hospitals = function() {
    var y_parameter = $('input[name=y_parameter_option]:checked').val();
    // selection sort. whatever. it's 5am.
    var max_j;
    var max;
    var tmp;
    for (var i=0; i<hospital_count; i++) {
        min_j = i;
        min = hospitals[i].hospital[y_parameter];
        for (var j=i+1; j<hospital_count; j++) {
            if (min > hospitals[j].hospital[y_parameter]) {
                min_j = j;
                min = hospitals[j].hospital[y_parameter]
            }
        }
        if (min!=min_j) {
            tmp = hospitals[i];
            hospitals[i] = hospitals[min_j];
            hospitals[min_j] = tmp;
            tmp = x_hospitals[i];
            x_hospitals[i] = x_hospitals[min_j];
            x_hospitals[min_j] = tmp;
            tmp = y_hospitals[i];
            y_hospitals[i] = y_hospitals[min_j];
            y_hospitals[min_j] = tmp;
        }
    }
    
    $('#source_info tr:odd').css('background-color','#d9d9d9');
    $('#source_info tr:even').css('background-color','#ffffff');
}

</script>
